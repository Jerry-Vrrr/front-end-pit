{"ast":null,"code":"var _jsxFileName = \"/Users/jerryvohrer/bespoke-work/front-end-pit/frontend/frontend/src/components/ClientBox.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COMPANY_MAPPING = {\n  \"475663645\": \"Apricot\",\n  \"432770919\": \"Brock\",\n  \"754688700\": \"Brown Chiari\",\n  \"707808192\": \"Conger\",\n  \"196651924\": \"CPJ\",\n  \"408997789\": \"Crowell\",\n  \"788957891\": \"Greenstein Pittari\",\n  \"435195417\": \"Greenberg\",\n  \"294642214\": \"KLAW\",\n  \"533921350\": \"Kohan Bablove\",\n  \"316384868\": \"Lewis\",\n  \"612344072\": \"Lopez Humphries\",\n  \"595022144\": \"Mahoney\",\n  \"258732157\": \"Money\",\n  \"427975086\": \"Rozas\",\n  \"847306783\": \"Trust\"\n};\nexport const CompanyContext = /*#__PURE__*/createContext();\nexport const CompanyProvider = ({\n  children\n}) => {\n  _s();\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [totalCalls, setTotalCalls] = useState({});\n  const [callsLast24Hours, setCallsLast24Hours] = useState({});\n  const [trend24Hours, setTrend24Hours] = useState({});\n  const [trend30Days, setTrend30Days] = useState({});\n  const [entriesLast24Hours, setEntriesLast24Hours] = useState({});\n  const [gravityFormEntries, setGravityFormEntries] = useState([]);\n  const fetchCallData = async companyId => {\n    try {\n      const response = await axios.get(`http://localhost:3000/api/v1/call_rail_data?company_id=${companyId}`);\n      const calls = response.data;\n      const thirtyDaysAgo = new Date();\n      thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n      const recentCalls = calls.filter(call => new Date(call.start_time) >= thirtyDaysAgo);\n      setTotalCalls(prev => ({\n        ...prev,\n        [companyId]: recentCalls.length\n      }));\n      const twentyFourHoursAgo = new Date();\n      twentyFourHoursAgo.setDate(twentyFourHoursAgo.getDate() - 1);\n      const recent24HourCalls = calls.filter(call => new Date(call.start_time) >= twentyFourHoursAgo);\n      setCallsLast24Hours(prev => ({\n        ...prev,\n        [companyId]: recent24HourCalls.length\n      }));\n      const previous30DaysCalls = calls.filter(call => new Date(call.start_time) < thirtyDaysAgo);\n      const previous30DaysCount = previous30DaysCalls.length;\n      setTrend30Days(prev => ({\n        ...prev,\n        [companyId]: recentCalls.length > previous30DaysCount ? 'trend-up' : 'trend-down'\n      }));\n      const previous24HoursCalls = calls.filter(call => new Date(call.start_time) < twentyFourHoursAgo);\n      const previous24HoursCount = previous24HoursCalls.length;\n      setTrend24Hours(prev => ({\n        ...prev,\n        [companyId]: recent24HourCalls.length > previous24HoursCount ? 'trend-up' : 'trend-down'\n      }));\n    } catch (error) {\n      console.error('Error fetching the call data', error);\n    }\n  };\n  const fetchGravityFormsData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/v1/gravity_forms/entries');\n      const entries = response.data;\n      const twentyFourHoursAgo = new Date();\n      twentyFourHoursAgo.setDate(twentyFourHoursAgo.getDate() - 1);\n      const newEntries = {};\n      entries.forEach(entry => {\n        const companyId = entry.company_id;\n        if (new Date(entry.date_created) >= twentyFourHoursAgo) {\n          if (!newEntries[companyId]) {\n            newEntries[companyId] = 0;\n          }\n          newEntries[companyId]++;\n        }\n      });\n      setEntriesLast24Hours(newEntries);\n      setGravityFormEntries(entries);\n    } catch (error) {\n      console.error('Error fetching Gravity Forms data:', error);\n    }\n  };\n  useEffect(() => {\n    if (selectedCompany) {\n      fetchCallData(selectedCompany);\n      fetchGravityFormsData();\n    }\n  }, [selectedCompany]);\n  return /*#__PURE__*/_jsxDEV(CompanyContext.Provider, {\n    value: {\n      selectedCompany,\n      setSelectedCompany,\n      COMPANY_MAPPING,\n      totalCalls,\n      callsLast24Hours,\n      trend24Hours,\n      trend30Days,\n      setTrend24Hours,\n      setTrend30Days,\n      entriesLast24Hours,\n      gravityFormEntries\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyProvider, \"1RrwTXzkRpb8zuzq1Ux/PGPejTc=\");\n_c = CompanyProvider;\nvar _c;\n$RefreshReg$(_c, \"CompanyProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","COMPANY_MAPPING","CompanyContext","CompanyProvider","children","_s","selectedCompany","setSelectedCompany","totalCalls","setTotalCalls","callsLast24Hours","setCallsLast24Hours","trend24Hours","setTrend24Hours","trend30Days","setTrend30Days","entriesLast24Hours","setEntriesLast24Hours","gravityFormEntries","setGravityFormEntries","fetchCallData","companyId","response","get","calls","data","thirtyDaysAgo","Date","setDate","getDate","recentCalls","filter","call","start_time","prev","length","twentyFourHoursAgo","recent24HourCalls","previous30DaysCalls","previous30DaysCount","previous24HoursCalls","previous24HoursCount","error","console","fetchGravityFormsData","entries","newEntries","forEach","entry","company_id","date_created","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jerryvohrer/bespoke-work/front-end-pit/frontend/frontend/src/components/ClientBox.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst COMPANY_MAPPING = {\n  \"475663645\": \"Apricot\",\n  \"432770919\": \"Brock\",\n  \"754688700\": \"Brown Chiari\",\n  \"707808192\": \"Conger\",\n  \"196651924\": \"CPJ\",\n  \"408997789\": \"Crowell\",\n  \"788957891\": \"Greenstein Pittari\",\n  \"435195417\": \"Greenberg\",\n  \"294642214\": \"KLAW\",\n  \"533921350\": \"Kohan Bablove\",\n  \"316384868\": \"Lewis\",\n  \"612344072\": \"Lopez Humphries\",\n  \"595022144\": \"Mahoney\",\n  \"258732157\": \"Money\",\n  \"427975086\": \"Rozas\",\n  \"847306783\": \"Trust\"\n};\n\nexport const CompanyContext = createContext();\n\nexport const CompanyProvider = ({ children }) => {\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [totalCalls, setTotalCalls] = useState({});\n  const [callsLast24Hours, setCallsLast24Hours] = useState({});\n  const [trend24Hours, setTrend24Hours] = useState({});\n  const [trend30Days, setTrend30Days] = useState({});\n  const [entriesLast24Hours, setEntriesLast24Hours] = useState({});\n  const [gravityFormEntries, setGravityFormEntries] = useState([]);\n\n  const fetchCallData = async (companyId) => {\n    try {\n      const response = await axios.get(`http://localhost:3000/api/v1/call_rail_data?company_id=${companyId}`);\n      const calls = response.data;\n\n      const thirtyDaysAgo = new Date();\n      thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n\n      const recentCalls = calls.filter(call => new Date(call.start_time) >= thirtyDaysAgo);\n      setTotalCalls(prev => ({ ...prev, [companyId]: recentCalls.length }));\n\n      const twentyFourHoursAgo = new Date();\n      twentyFourHoursAgo.setDate(twentyFourHoursAgo.getDate() - 1);\n      const recent24HourCalls = calls.filter(call => new Date(call.start_time) >= twentyFourHoursAgo);\n      setCallsLast24Hours(prev => ({ ...prev, [companyId]: recent24HourCalls.length }));\n\n      const previous30DaysCalls = calls.filter(call => new Date(call.start_time) < thirtyDaysAgo);\n      const previous30DaysCount = previous30DaysCalls.length;\n      setTrend30Days(prev => ({ ...prev, [companyId]: recentCalls.length > previous30DaysCount ? 'trend-up' : 'trend-down' }));\n\n      const previous24HoursCalls = calls.filter(call => new Date(call.start_time) < twentyFourHoursAgo);\n      const previous24HoursCount = previous24HoursCalls.length;\n      setTrend24Hours(prev => ({ ...prev, [companyId]: recent24HourCalls.length > previous24HoursCount ? 'trend-up' : 'trend-down' }));\n    } catch (error) {\n      console.error('Error fetching the call data', error);\n    }\n  };\n\n  const fetchGravityFormsData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/v1/gravity_forms/entries');\n      const entries = response.data;\n      const twentyFourHoursAgo = new Date();\n      twentyFourHoursAgo.setDate(twentyFourHoursAgo.getDate() - 1);\n\n      const newEntries = {};\n      entries.forEach(entry => {\n        const companyId = entry.company_id;\n        if (new Date(entry.date_created) >= twentyFourHoursAgo) {\n          if (!newEntries[companyId]) {\n            newEntries[companyId] = 0;\n          }\n          newEntries[companyId]++;\n        }\n      });\n\n      setEntriesLast24Hours(newEntries);\n      setGravityFormEntries(entries);\n    } catch (error) {\n      console.error('Error fetching Gravity Forms data:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedCompany) {\n      fetchCallData(selectedCompany);\n      fetchGravityFormsData();\n    }\n  }, [selectedCompany]);\n\n  return (\n    <CompanyContext.Provider value={{\n      selectedCompany,\n      setSelectedCompany,\n      COMPANY_MAPPING,\n      totalCalls,\n      callsLast24Hours,\n      trend24Hours,\n      trend30Days,\n      setTrend24Hours,\n      setTrend30Days,\n      entriesLast24Hours,\n      gravityFormEntries\n    }}>\n      {children}\n    </CompanyContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}