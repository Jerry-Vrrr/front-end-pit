{"ast":null,"code":"var _jsxFileName = \"/Users/jerryvohrer/bespoke-work/front-end-pit/frontend/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authToken, setAuthToken] = useState(localStorage.getItem(\"sessionToken\") || null);\n  const login = token => {\n    console.log(\"Token received in login function:\", token); // Add this to check if the token is received\n    setAuthToken(token);\n    localStorage.setItem(\"sessionToken\", token);\n  };\n  const logout = () => {\n    setAuthToken(null);\n    localStorage.removeItem(\"sessionToken\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authToken,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"pkKkpjBXWqW8OmrGRaW5PkuWtI0=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authToken","setAuthToken","localStorage","getItem","login","token","console","log","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jerryvohrer/bespoke-work/front-end-pit/frontend/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [authToken, setAuthToken] = useState(localStorage.getItem(\"sessionToken\") || null);\n\n  const login = (token) => {\n    console.log(\"Token received in login function:\", token);  // Add this to check if the token is received\n    setAuthToken(token);\n    localStorage.setItem(\"sessionToken\", token);\n  };\n\n  const logout = () => {\n    setAuthToken(null);\n    localStorage.removeItem(\"sessionToken\");\n  };\n\n  return (\n    <AuthContext.Provider value={{ authToken, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAACS,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC;EAExF,MAAMC,KAAK,GAAIC,KAAK,IAAK;IACvBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEF,KAAK,CAAC,CAAC,CAAE;IAC1DJ,YAAY,CAACI,KAAK,CAAC;IACnBH,YAAY,CAACM,OAAO,CAAC,cAAc,EAAEH,KAAK,CAAC;EAC7C,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBR,YAAY,CAAC,IAAI,CAAC;IAClBC,YAAY,CAACQ,UAAU,CAAC,cAAc,CAAC;EACzC,CAAC;EAED,oBACEf,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,SAAS;MAAEI,KAAK;MAAEK;IAAO,CAAE;IAAAX,QAAA,EACvDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjB,EAAA,CAnBWF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAqBzB,eAAeD,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}