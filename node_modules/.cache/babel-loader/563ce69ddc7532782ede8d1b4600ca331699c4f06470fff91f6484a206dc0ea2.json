{"ast":null,"code":"var _jsxFileName = \"/Users/jerryvohrer/bespoke-work/front-end-pit/frontend/frontend/src/context/CompanyContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport AuthContext from './AuthContext'; // Import the AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COMPANY_MAPPING = {\n  /* Populate your company mapping here */\n};\nexport const CompanyContext = /*#__PURE__*/createContext();\nexport const CompanyProvider = ({\n  children\n}) => {\n  _s();\n  const [totalCalls, setTotalCalls] = useState({});\n  const [callsLast24Hours, setCallsLast24Hours] = useState({});\n  const [trend24Hours, setTrend24Hours] = useState({});\n  const [trend30Days, setTrend30Days] = useState({});\n  const [entriesLast24Hours, setEntriesLast24Hours] = useState({});\n  const [gravityFormEntries, setGravityFormEntries] = useState({});\n  const [clientCallCounts, setClientCallCounts] = useState([]);\n  const {\n    authToken\n  } = useContext(AuthContext); // Get the token from AuthContext\n\n  const fetchCallDataForAllCompanies = async () => {\n    try {\n      const allCalls = [];\n      for (const companyId in COMPANY_MAPPING) {\n        console.log(`Fetching call data for company: ${companyId}`);\n        const response = await axios.get(`http://localhost:3000/api/v1/call_rail_data?company_id=${companyId}`, {\n          headers: {\n            Authorization: `Bearer ${authToken}` // Use the token here\n          }\n        });\n        console.log('Call data fetched for company:', companyId, response.data);\n        allCalls.push(...response.data);\n      }\n      setClientCallCounts(allCalls);\n    } catch (error) {\n      console.error('Error fetching call data:', error);\n    }\n  };\n  const fetchGravityFormsData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/v1/gravity_forms/entries', {\n        headers: {\n          Authorization: `Bearer ${authToken}` // Use the token here\n        }\n      });\n      setGravityFormEntries(response.data); // Set the state with the data\n    } catch (error) {\n      console.error('Error fetching Gravity Forms data:', error);\n    }\n  };\n  useEffect(() => {\n    if (authToken) {\n      console.log('authToken in useEffect:', authToken);\n      fetchCallDataForAllCompanies(); // Fetch data for all companies\n      fetchGravityFormsData();\n    }\n  }, [authToken]);\n  return /*#__PURE__*/_jsxDEV(CompanyContext.Provider, {\n    value: {\n      COMPANY_MAPPING,\n      totalCalls,\n      callsLast24Hours,\n      trend24Hours,\n      trend30Days,\n      clientCallCounts,\n      // Make this accessible in the Dashboard\n      setTrend24Hours,\n      setTrend30Days,\n      entriesLast24Hours,\n      gravityFormEntries\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyProvider, \"8o7PpRjlGYLuMojOPhWazne9GkY=\");\n_c = CompanyProvider;\nvar _c;\n$RefreshReg$(_c, \"CompanyProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","AuthContext","jsxDEV","_jsxDEV","COMPANY_MAPPING","CompanyContext","CompanyProvider","children","_s","totalCalls","setTotalCalls","callsLast24Hours","setCallsLast24Hours","trend24Hours","setTrend24Hours","trend30Days","setTrend30Days","entriesLast24Hours","setEntriesLast24Hours","gravityFormEntries","setGravityFormEntries","clientCallCounts","setClientCallCounts","authToken","fetchCallDataForAllCompanies","allCalls","companyId","console","log","response","get","headers","Authorization","data","push","error","fetchGravityFormsData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jerryvohrer/bespoke-work/front-end-pit/frontend/frontend/src/context/CompanyContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport AuthContext from './AuthContext';  // Import the AuthContext\n\nconst COMPANY_MAPPING = { \n  /* Populate your company mapping here */\n};\n\nexport const CompanyContext = createContext();\n\nexport const CompanyProvider = ({ children }) => {\n  const [totalCalls, setTotalCalls] = useState({});\n  const [callsLast24Hours, setCallsLast24Hours] = useState({});\n  const [trend24Hours, setTrend24Hours] = useState({});\n  const [trend30Days, setTrend30Days] = useState({});\n  const [entriesLast24Hours, setEntriesLast24Hours] = useState({});\n  const [gravityFormEntries, setGravityFormEntries] = useState({});\n  const [clientCallCounts, setClientCallCounts] = useState([]);\n\n  const { authToken } = useContext(AuthContext);  // Get the token from AuthContext\n\n  const fetchCallDataForAllCompanies = async () => {\n    try {\n      const allCalls = [];\n      for (const companyId in COMPANY_MAPPING) {\n        console.log(`Fetching call data for company: ${companyId}`);\n        const response = await axios.get(`http://localhost:3000/api/v1/call_rail_data?company_id=${companyId}`, {\n          headers: {\n            Authorization: `Bearer ${authToken}`,  // Use the token here\n          },\n        });\n        console.log('Call data fetched for company:', companyId, response.data);\n\n        allCalls.push(...response.data);\n      }\n      setClientCallCounts(allCalls);\n    } catch (error) {\n      console.error('Error fetching call data:', error);\n    }\n  };\n\n  const fetchGravityFormsData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/v1/gravity_forms/entries', {\n        headers: {\n          Authorization: `Bearer ${authToken}`,  // Use the token here\n        },\n      });\n      setGravityFormEntries(response.data);  // Set the state with the data\n    } catch (error) {\n      console.error('Error fetching Gravity Forms data:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (authToken) {\n      console.log('authToken in useEffect:', authToken);\n\n      fetchCallDataForAllCompanies(); // Fetch data for all companies\n      fetchGravityFormsData();\n    }\n  }, [authToken]);\n\n  return (\n    <CompanyContext.Provider value={{ \n      COMPANY_MAPPING, \n      totalCalls, \n      callsLast24Hours,\n      trend24Hours,\n      trend30Days,\n      clientCallCounts,  // Make this accessible in the Dashboard\n      setTrend24Hours, \n      setTrend30Days,\n      entriesLast24Hours,\n      gravityFormEntries \n    }}>\n      {children}\n    </CompanyContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,eAAe,GAAG;EACtB;AAAA,CACD;AAED,OAAO,MAAMC,cAAc,gBAAGT,aAAa,CAAC,CAAC;AAE7C,OAAO,MAAMU,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACoB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChE,MAAM,CAACsB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChE,MAAM,CAACwB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAE5D,MAAM;IAAE0B;EAAU,CAAC,GAAGxB,UAAU,CAACE,WAAW,CAAC,CAAC,CAAE;;EAEhD,MAAMuB,4BAA4B,GAAG,MAAAA,CAAA,KAAY;IAC/C,IAAI;MACF,MAAMC,QAAQ,GAAG,EAAE;MACnB,KAAK,MAAMC,SAAS,IAAItB,eAAe,EAAE;QACvCuB,OAAO,CAACC,GAAG,CAAC,mCAAmCF,SAAS,EAAE,CAAC;QAC3D,MAAMG,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAC,0DAA0DJ,SAAS,EAAE,EAAE;UACtGK,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUT,SAAS,EAAE,CAAG;UACzC;QACF,CAAC,CAAC;QACFI,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,SAAS,EAAEG,QAAQ,CAACI,IAAI,CAAC;QAEvER,QAAQ,CAACS,IAAI,CAAC,GAAGL,QAAQ,CAACI,IAAI,CAAC;MACjC;MACAX,mBAAmB,CAACG,QAAQ,CAAC;IAC/B,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,GAAG,CAAC,oDAAoD,EAAE;QACrFC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUT,SAAS,EAAE,CAAG;QACzC;MACF,CAAC,CAAC;MACFH,qBAAqB,CAACS,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAE;IACzC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EACF,CAAC;EAEDrC,SAAS,CAAC,MAAM;IACd,IAAIyB,SAAS,EAAE;MACbI,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEL,SAAS,CAAC;MAEjDC,4BAA4B,CAAC,CAAC,CAAC,CAAC;MAChCY,qBAAqB,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,CAACb,SAAS,CAAC,CAAC;EAEf,oBACEpB,OAAA,CAACE,cAAc,CAACgC,QAAQ;IAACC,KAAK,EAAE;MAC9BlC,eAAe;MACfK,UAAU;MACVE,gBAAgB;MAChBE,YAAY;MACZE,WAAW;MACXM,gBAAgB;MAAG;MACnBP,eAAe;MACfE,cAAc;MACdC,kBAAkB;MAClBE;IACF,CAAE;IAAAZ,QAAA,EACCA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAAClC,EAAA,CArEWF,eAAe;AAAAqC,EAAA,GAAfrC,eAAe;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}