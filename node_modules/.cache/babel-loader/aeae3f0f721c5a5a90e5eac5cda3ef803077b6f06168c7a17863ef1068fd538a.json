{"ast":null,"code":"import React,{createContext,useState,useEffect,useCallback}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const COMPANY_MAPPING={\"475663645\":\"Apricot\",\"432770919\":\"Brock\",\"754688700\":\"Brown Chiari\",\"707808192\":\"Conger\",\"196651924\":\"CPJ\",\"408997789\":\"Crowell\",\"788957891\":\"Greenstein Pittari\",\"435195417\":\"Greenberg\",\"294642214\":\"KLAW\",\"533921350\":\"Kohan Bablove\",\"316384868\":\"Lewis\",\"612344072\":\"Lopez Humphries\",\"595022144\":\"Mahoney\",\"258732157\":\"Money\",\"427975086\":\"Rozas\",\"847306783\":\"Trust\"};export const CompanyContext=/*#__PURE__*/createContext();export const CompanyProvider=_ref=>{let{children}=_ref;const[selectedCompany,setSelectedCompany]=useState(\"475663645\");// Default to first company\nconst[totalCalls,setTotalCalls]=useState({});const[callsLast24Hours,setCallsLast24Hours]=useState({});const[trend24Hours,setTrend24Hours]=useState({});const[trend30Days,setTrend30Days]=useState({});const[entriesLast24Hours,setEntriesLast24Hours]=useState({});const[gravityFormEntries,setGravityFormEntries]=useState([]);const[allCalls,setAllCalls]=useState({});// Memoized function to fetch all company data\nconst fetchAllCompaniesData=useCallback(async()=>{try{await Promise.all([Promise.all(Object.keys(COMPANY_MAPPING).map(async companyId=>{try{await fetchCallData(companyId);}catch(error){console.error(\"Error fetching data for company ID \".concat(companyId,\":\"),error);}})),fetchGravityFormsData()]);}catch(error){console.error('Error fetching data for all companies:',error);}},[]);// Use useCallback to memoize\nconst fetchCallData=async companyId=>{try{const response=await axios.get(\"http://localhost:3000/api/v1/call_rail_data?company_id=\".concat(companyId));const calls=response.data;const thirtyDaysAgo=new Date();thirtyDaysAgo.setDate(thirtyDaysAgo.getDate()-30);const recentCalls=calls.filter(call=>new Date(call.start_time)>=thirtyDaysAgo);setTotalCalls(prev=>({...prev,[companyId]:recentCalls.length}));const twentyFourHoursAgo=new Date();twentyFourHoursAgo.setDate(twentyFourHoursAgo.getDate()-1);const recent24HourCalls=calls.filter(call=>new Date(call.start_time)>=twentyFourHoursAgo);setCallsLast24Hours(prev=>({...prev,[companyId]:recent24HourCalls.length}));const previous30DaysCalls=calls.filter(call=>new Date(call.start_time)<thirtyDaysAgo);const previous30DaysCount=previous30DaysCalls.length;setTrend30Days(prev=>({...prev,[companyId]:recentCalls.length>previous30DaysCount?'trend-up':'trend-down'}));const previous24HoursCalls=calls.filter(call=>new Date(call.start_time)<twentyFourHoursAgo);const previous24HoursCount=previous24HoursCalls.length;setTrend24Hours(prev=>({...prev,[companyId]:recent24HourCalls.length>previous24HoursCount?'trend-up':'trend-down'}));// Store all calls data for this company in the allCalls state\nsetAllCalls(prev=>({...prev,[companyId]:calls}));}catch(error){console.error('Error fetching the call data for company:',error);}};const fetchGravityFormsData=async()=>{try{const response=await axios.get('http://localhost:3000/api/v1/gravity_forms/entries');const entries=response.data;const twentyFourHoursAgo=new Date();twentyFourHoursAgo.setDate(twentyFourHoursAgo.getDate()-1);const newEntries={};entries.forEach(entry=>{const companyId=entry.company_id;if(new Date(entry.date_created)>=twentyFourHoursAgo){if(!newEntries[companyId]){newEntries[companyId]=0;}newEntries[companyId]++;}});setEntriesLast24Hours(newEntries);setGravityFormEntries(entries);}catch(error){console.error('Error fetching Gravity Forms data:',error);}};useEffect(()=>{fetchAllCompaniesData();// Fetch data for all companies on mount\n},[fetchAllCompaniesData]);// Add fetchAllCompaniesData to the dependency array\nreturn/*#__PURE__*/_jsx(CompanyContext.Provider,{value:{COMPANY_MAPPING,totalCalls,allCalls,callsLast24Hours,trend24Hours,trend30Days,entriesLast24Hours,gravityFormEntries,selectedCompany,setSelectedCompany// Ensure this is provided in the context\n},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","axios","jsx","_jsx","COMPANY_MAPPING","CompanyContext","CompanyProvider","_ref","children","selectedCompany","setSelectedCompany","totalCalls","setTotalCalls","callsLast24Hours","setCallsLast24Hours","trend24Hours","setTrend24Hours","trend30Days","setTrend30Days","entriesLast24Hours","setEntriesLast24Hours","gravityFormEntries","setGravityFormEntries","allCalls","setAllCalls","fetchAllCompaniesData","Promise","all","Object","keys","map","companyId","fetchCallData","error","console","concat","fetchGravityFormsData","response","get","calls","data","thirtyDaysAgo","Date","setDate","getDate","recentCalls","filter","call","start_time","prev","length","twentyFourHoursAgo","recent24HourCalls","previous30DaysCalls","previous30DaysCount","previous24HoursCalls","previous24HoursCount","entries","newEntries","forEach","entry","company_id","date_created","Provider","value"],"sources":["/Users/jerryvohrer/bespoke-work/front-end-pit/src/context/CompanyContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\n\nconst COMPANY_MAPPING = {\n  \"475663645\": \"Apricot\",\n  \"432770919\": \"Brock\",\n  \"754688700\": \"Brown Chiari\",\n  \"707808192\": \"Conger\",\n  \"196651924\": \"CPJ\",\n  \"408997789\": \"Crowell\",\n  \"788957891\": \"Greenstein Pittari\",\n  \"435195417\": \"Greenberg\",\n  \"294642214\": \"KLAW\",\n  \"533921350\": \"Kohan Bablove\",\n  \"316384868\": \"Lewis\",\n  \"612344072\": \"Lopez Humphries\",\n  \"595022144\": \"Mahoney\",\n  \"258732157\": \"Money\",\n  \"427975086\": \"Rozas\",\n  \"847306783\": \"Trust\"\n};\n\nexport const CompanyContext = createContext();\n\nexport const CompanyProvider = ({ children }) => {\n  const [selectedCompany, setSelectedCompany] = useState(\"475663645\"); // Default to first company\n  const [totalCalls, setTotalCalls] = useState({});\n  const [callsLast24Hours, setCallsLast24Hours] = useState({});\n  const [trend24Hours, setTrend24Hours] = useState({});\n  const [trend30Days, setTrend30Days] = useState({});\n  const [entriesLast24Hours, setEntriesLast24Hours] = useState({});\n  const [gravityFormEntries, setGravityFormEntries] = useState([]);\n  const [allCalls, setAllCalls] = useState({});\n\n  // Memoized function to fetch all company data\n  const fetchAllCompaniesData = useCallback(async () => {\n    try {\n      await Promise.all([\n        Promise.all(Object.keys(COMPANY_MAPPING).map(async (companyId) => {\n          try {\n            await fetchCallData(companyId);\n          } catch (error) {\n            console.error(`Error fetching data for company ID ${companyId}:`, error);\n          }\n        })),\n        fetchGravityFormsData()\n      ]);\n    } catch (error) {\n      console.error('Error fetching data for all companies:', error);\n    }\n  }, []); // Use useCallback to memoize\n\n  const fetchCallData = async (companyId) => {\n    try {\n      const response = await axios.get(`http://localhost:3000/api/v1/call_rail_data?company_id=${companyId}`);\n      const calls = response.data;\n  \n      const thirtyDaysAgo = new Date();\n      thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n  \n      const recentCalls = calls.filter(call => new Date(call.start_time) >= thirtyDaysAgo);\n      setTotalCalls(prev => ({ ...prev, [companyId]: recentCalls.length }));\n  \n      const twentyFourHoursAgo = new Date();\n      twentyFourHoursAgo.setDate(twentyFourHoursAgo.getDate() - 1);\n      const recent24HourCalls = calls.filter(call => new Date(call.start_time) >= twentyFourHoursAgo);\n      setCallsLast24Hours(prev => ({ ...prev, [companyId]: recent24HourCalls.length }));\n  \n      const previous30DaysCalls = calls.filter(call => new Date(call.start_time) < thirtyDaysAgo);\n      const previous30DaysCount = previous30DaysCalls.length;\n      setTrend30Days(prev => ({ ...prev, [companyId]: recentCalls.length > previous30DaysCount ? 'trend-up' : 'trend-down' }));\n  \n      const previous24HoursCalls = calls.filter(call => new Date(call.start_time) < twentyFourHoursAgo);\n      const previous24HoursCount = previous24HoursCalls.length;\n      setTrend24Hours(prev => ({ ...prev, [companyId]: recent24HourCalls.length > previous24HoursCount ? 'trend-up' : 'trend-down' }));\n\n      // Store all calls data for this company in the allCalls state\n      setAllCalls(prev => ({ ...prev, [companyId]: calls }));\n\n    } catch (error) {\n      console.error('Error fetching the call data for company:', error);\n    }\n  };\n  \n  const fetchGravityFormsData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/v1/gravity_forms/entries');\n      const entries = response.data;\n\n      const twentyFourHoursAgo = new Date();\n      twentyFourHoursAgo.setDate(twentyFourHoursAgo.getDate() - 1);\n\n      const newEntries = {};\n      entries.forEach(entry => {\n        const companyId = entry.company_id;\n        if (new Date(entry.date_created) >= twentyFourHoursAgo) {\n          if (!newEntries[companyId]) {\n            newEntries[companyId] = 0;\n          }\n          newEntries[companyId]++;\n        }\n      });\n\n      setEntriesLast24Hours(newEntries);\n      setGravityFormEntries(entries);\n    } catch (error) {\n      console.error('Error fetching Gravity Forms data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchAllCompaniesData(); // Fetch data for all companies on mount\n  }, [fetchAllCompaniesData]); // Add fetchAllCompaniesData to the dependency array\n\n  return (\n    <CompanyContext.Provider value={{\n      COMPANY_MAPPING,\n      totalCalls,\n      allCalls,\n      callsLast24Hours,\n      trend24Hours,\n      trend30Days,\n      entriesLast24Hours,\n      gravityFormEntries,\n      selectedCompany, \n      setSelectedCompany // Ensure this is provided in the context\n    }}>\n      {children}\n    </CompanyContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}