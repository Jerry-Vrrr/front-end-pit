{"ast":null,"code":"var _jsxFileName = \"/Users/jerryvohrer/bespoke-work/front-end-pit/frontend/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { CompanyContext } from '../context/CompanyContext'; // Import CompanyContext\nimport ClientBox from './ClientBox'; // Import ClientBox component\nimport './Dashboard.css'; // Import Dashboard.css for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  console.log('Dashboard component is rendering');\n  const {\n    COMPANY_MAPPING\n  } = useContext(CompanyContext); // Access COMPANY_MAPPING from context\n  const [clientCallCounts, setClientCallCounts] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  useEffect(() => {\n    const fetchCallData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/api/v1/call_rail_data');\n        const calls = response.data;\n\n        // Log the fetched call data to verify the structure\n        console.log('Fetched call data:', calls);\n\n        // Count the number of calls for each company\n        const callCounts = {};\n        const thirtyDaysAgo = new Date();\n        thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n        calls.forEach(call => {\n          const companyId = call.company_id;\n          if (!callCounts[companyId]) {\n            callCounts[companyId] = 0;\n          }\n          if (new Date(call.start_time) >= thirtyDaysAgo) {\n            callCounts[companyId]++;\n          }\n        });\n\n        // Log the calculated call counts to check if this step is working correctly\n        console.log('Call counts:', callCounts);\n\n        // Convert to an array and sort by call count in descending order\n        const sortedClientCallCounts = Object.keys(COMPANY_MAPPING).map(companyId => ({\n          companyId,\n          companyName: COMPANY_MAPPING[companyId],\n          callCount: callCounts[companyId] || 0\n        })).sort((a, b) => b.callCount - a.callCount);\n\n        // Log the sorted client call counts to verify\n        console.log('Sorted client call counts:', sortedClientCallCounts);\n        setClientCallCounts(sortedClientCallCounts);\n      } catch (error) {\n        console.error('Error fetching call data:', error);\n      }\n    };\n    fetchCallData();\n  }, [COMPANY_MAPPING]);\n  const handleShowMore = () => {\n    setShowMore(!showMore);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Client Performance Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"client-boxes\",\n      children: clientCallCounts.length > 0 ? clientCallCounts.slice(0, showMore ? clientCallCounts.length : 8).map(client => /*#__PURE__*/_jsxDEV(ClientBox, {\n        companyId: client.companyId,\n        companyName: client.companyName,\n        totalCalls: client.callCount\n      }, client.companyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No clients found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), clientCallCounts.length > 8 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"show-more-button\",\n      onClick: handleShowMore,\n      children: showMore ? 'Show Less' : 'Show More'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"jw1jXMicXPQrND4FYLa06XcCxHI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useContext","useState","useEffect","CompanyContext","ClientBox","jsxDEV","_jsxDEV","Dashboard","_s","console","log","COMPANY_MAPPING","clientCallCounts","setClientCallCounts","showMore","setShowMore","fetchCallData","response","axios","get","calls","data","callCounts","thirtyDaysAgo","Date","setDate","getDate","forEach","call","companyId","company_id","start_time","sortedClientCallCounts","Object","keys","map","companyName","callCount","sort","a","b","error","handleShowMore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","slice","client","totalCalls","onClick","_c","$RefreshReg$"],"sources":["/Users/jerryvohrer/bespoke-work/front-end-pit/frontend/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { CompanyContext } from '../context/CompanyContext'; // Import CompanyContext\nimport ClientBox from './ClientBox'; // Import ClientBox component\nimport './Dashboard.css'; // Import Dashboard.css for styling\n\nconst Dashboard = () => {\n  console.log('Dashboard component is rendering');\n\n  const { COMPANY_MAPPING } = useContext(CompanyContext); // Access COMPANY_MAPPING from context\n  const [clientCallCounts, setClientCallCounts] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n\n  useEffect(() => {\n    const fetchCallData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/api/v1/call_rail_data');\n        const calls = response.data;\n        \n        // Log the fetched call data to verify the structure\n        console.log('Fetched call data:', calls);\n\n        // Count the number of calls for each company\n        const callCounts = {};\n        const thirtyDaysAgo = new Date();\n        thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n        \n        calls.forEach(call => {\n          const companyId = call.company_id;\n          if (!callCounts[companyId]) {\n            callCounts[companyId] = 0;\n          }\n          if (new Date(call.start_time) >= thirtyDaysAgo) {\n            callCounts[companyId]++;\n          }\n        });\n\n        // Log the calculated call counts to check if this step is working correctly\n        console.log('Call counts:', callCounts);\n\n        // Convert to an array and sort by call count in descending order\n        const sortedClientCallCounts = Object.keys(COMPANY_MAPPING).map(companyId => ({\n          companyId,\n          companyName: COMPANY_MAPPING[companyId],\n          callCount: callCounts[companyId] || 0\n        })).sort((a, b) => b.callCount - a.callCount);\n\n        // Log the sorted client call counts to verify\n        console.log('Sorted client call counts:', sortedClientCallCounts);\n\n        setClientCallCounts(sortedClientCallCounts);\n      } catch (error) {\n        console.error('Error fetching call data:', error);\n      }\n    };\n\n    fetchCallData();\n  }, [COMPANY_MAPPING]);\n\n  const handleShowMore = () => {\n    setShowMore(!showMore);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Client Performance Overview</h1>\n      <div className=\"client-boxes\">\n        {clientCallCounts.length > 0 ? (\n          clientCallCounts\n            .slice(0, showMore ? clientCallCounts.length : 8)\n            .map(client => (\n              <ClientBox \n                key={client.companyId} \n                companyId={client.companyId} \n                companyName={client.companyName} \n                totalCalls={client.callCount} \n              />\n            ))\n        ) : (\n          <p>No clients found</p>\n        )}\n      </div>\n      {clientCallCounts.length > 8 && (\n        <button className=\"show-more-button\" onClick={handleShowMore}>\n          {showMore ? 'Show Less' : 'Show More'}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}