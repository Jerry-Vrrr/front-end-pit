{"ast":null,"code":"var _jsxFileName = \"/Users/jerryvohrer/bespoke-work/front-end-pit/frontend/frontend/src/context/CompanyContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COMPANY_MAPPING = {\n  \"475663645\": \"Apricot\",\n  \"432770919\": \"Brock\",\n  \"754688700\": \"Brown Chiari\",\n  \"707808192\": \"Conger\",\n  \"196651924\": \"CPJ\",\n  \"408997789\": \"Crowell\",\n  \"788957891\": \"Greenstein Pittari\",\n  \"435195417\": \"Greenberg\",\n  \"294642214\": \"KLAW\",\n  \"533921350\": \"Kohan Bablove\",\n  \"316384868\": \"Lewis\",\n  \"612344072\": \"Lopez Humphries\",\n  \"595022144\": \"Mahoney\",\n  \"258732157\": \"Money\",\n  \"427975086\": \"Rozas\",\n  \"847306783\": \"Trust\"\n};\nexport const CompanyContext = /*#__PURE__*/createContext();\nexport const CompanyProvider = ({\n  children\n}) => {\n  _s();\n  const [totalCalls, setTotalCalls] = useState({});\n  const [callsLast24Hours, setCallsLast24Hours] = useState({});\n  const [trend24Hours, setTrend24Hours] = useState({});\n  const [trend30Days, setTrend30Days] = useState({});\n  const [entriesLast24Hours, setEntriesLast24Hours] = useState({});\n  const fetchCallData = async () => {\n    try {\n      for (const companyId in COMPANY_MAPPING) {\n        const response = await axios.get(`http://localhost:3000/api/v1/call_rail_data?company_id=${companyId}`);\n        const calls = response.data;\n        const total = calls.length;\n        const callsLast24HoursCount = calls.filter(call => new Date(call.start_time) >= new Date(Date.now() - 24 * 60 * 60 * 1000)).length;\n        setTotalCalls(prev => ({\n          ...prev,\n          [companyId]: total\n        }));\n        setCallsLast24Hours(prev => ({\n          ...prev,\n          [companyId]: callsLast24HoursCount\n        }));\n\n        // Add logic for trends based on previous periods here if needed\n        setTrend30Days(prev => ({\n          ...prev,\n          [companyId]: total >= 0 ? 'up' : 'down'\n        }));\n        setTrend24Hours(prev => ({\n          ...prev,\n          [companyId]: callsLast24HoursCount >= 0 ? 'up' : 'down'\n        }));\n      }\n    } catch (error) {\n      console.error('Error fetching the call data', error);\n    }\n  };\n  const fetchGravityFormsData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/v1/gravity_forms/entries');\n      const entries = response.data;\n      const twentyFourHoursAgo = new Date();\n      twentyFourHoursAgo.setDate(twentyFourHoursAgo.getDate() - 7);\n      const newEntries = {};\n      entries.forEach(entry => {\n        const companyId = entry.company_id;\n        if (new Date(entry.date_created) >= twentyFourHoursAgo) {\n          if (!newEntries[companyId]) {\n            newEntries[companyId] = 0;\n          }\n          newEntries[companyId]++;\n        }\n      });\n      setEntriesLast24Hours(newEntries);\n    } catch (error) {\n      console.error('Error fetching Gravity Forms data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchCallData();\n    fetchGravityFormsData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CompanyContext.Provider, {\n    value: {\n      COMPANY_MAPPING,\n      totalCalls,\n      callsLast24Hours,\n      trend24Hours,\n      trend30Days,\n      entriesLast24Hours\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyProvider, \"LNIyoin8cLb2+kCLRdQV9sHE1EY=\");\n_c = CompanyProvider;\nvar _c;\n$RefreshReg$(_c, \"CompanyProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","COMPANY_MAPPING","CompanyContext","CompanyProvider","children","_s","totalCalls","setTotalCalls","callsLast24Hours","setCallsLast24Hours","trend24Hours","setTrend24Hours","trend30Days","setTrend30Days","entriesLast24Hours","setEntriesLast24Hours","fetchCallData","companyId","response","get","calls","data","total","length","callsLast24HoursCount","filter","call","Date","start_time","now","prev","error","console","fetchGravityFormsData","entries","twentyFourHoursAgo","setDate","getDate","newEntries","forEach","entry","company_id","date_created","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jerryvohrer/bespoke-work/front-end-pit/frontend/frontend/src/context/CompanyContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst COMPANY_MAPPING = {\n  \"475663645\": \"Apricot\",\n  \"432770919\": \"Brock\",\n  \"754688700\": \"Brown Chiari\",\n  \"707808192\": \"Conger\",\n  \"196651924\": \"CPJ\",\n  \"408997789\": \"Crowell\",\n  \"788957891\": \"Greenstein Pittari\",\n  \"435195417\": \"Greenberg\",\n  \"294642214\": \"KLAW\",\n  \"533921350\": \"Kohan Bablove\",\n  \"316384868\": \"Lewis\",\n  \"612344072\": \"Lopez Humphries\",\n  \"595022144\": \"Mahoney\",\n  \"258732157\": \"Money\",\n  \"427975086\": \"Rozas\",\n  \"847306783\": \"Trust\"\n};\n\nexport const CompanyContext = createContext();\n\nexport const CompanyProvider = ({ children }) => {\n  const [totalCalls, setTotalCalls] = useState({});\n  const [callsLast24Hours, setCallsLast24Hours] = useState({});\n  const [trend24Hours, setTrend24Hours] = useState({});\n  const [trend30Days, setTrend30Days] = useState({});\n  const [entriesLast24Hours, setEntriesLast24Hours] = useState({});\n\n  const fetchCallData = async () => {\n    try {\n      for (const companyId in COMPANY_MAPPING) {\n        const response = await axios.get(`http://localhost:3000/api/v1/call_rail_data?company_id=${companyId}`);\n        const calls = response.data;\n\n        const total = calls.length;\n        const callsLast24HoursCount = calls.filter(call => new Date(call.start_time) >= new Date(Date.now() - 24 * 60 * 60 * 1000)).length;\n\n        setTotalCalls(prev => ({ ...prev, [companyId]: total }));\n        setCallsLast24Hours(prev => ({ ...prev, [companyId]: callsLast24HoursCount }));\n\n        // Add logic for trends based on previous periods here if needed\n        setTrend30Days(prev => ({ ...prev, [companyId]: total >= 0 ? 'up' : 'down' }));\n        setTrend24Hours(prev => ({ ...prev, [companyId]: callsLast24HoursCount >= 0 ? 'up' : 'down' }));\n      }\n    } catch (error) {\n      console.error('Error fetching the call data', error);\n    }\n  };\n\n  const fetchGravityFormsData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/v1/gravity_forms/entries');\n      const entries = response.data;\n\n      const twentyFourHoursAgo = new Date();\n      twentyFourHoursAgo.setDate(twentyFourHoursAgo.getDate() - 7);\n\n      const newEntries = {};\n      entries.forEach(entry => {\n        const companyId = entry.company_id; \n        if (new Date(entry.date_created) >= twentyFourHoursAgo) {\n          if (!newEntries[companyId]) {\n            newEntries[companyId] = 0;\n          }\n          newEntries[companyId]++;\n        }\n      });\n\n      setEntriesLast24Hours(newEntries);\n    } catch (error) {\n      console.error('Error fetching Gravity Forms data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchCallData();\n    fetchGravityFormsData();\n  }, []);\n\n  return (\n    <CompanyContext.Provider value={{\n      COMPANY_MAPPING,\n      totalCalls,\n      callsLast24Hours,\n      trend24Hours,\n      trend30Days,\n      entriesLast24Hours\n    }}>\n      {children}\n    </CompanyContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}