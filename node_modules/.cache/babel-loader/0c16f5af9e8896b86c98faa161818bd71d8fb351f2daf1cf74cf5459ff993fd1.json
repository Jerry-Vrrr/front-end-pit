{"ast":null,"code":"var _jsxFileName = \"/Users/jerryvohrer/bespoke-work/front-end-pit/frontend/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authToken, setAuthToken] = useState(localStorage.getItem(\"sessionToken\") || null);\n  const [userRole, setUserRole] = useState(localStorage.getItem(\"userRole\") || null); // New state for role\n  const [loggedCompanyId, setLoggedCompanyId] = useState(localStorage.getItem(\"loggedCompanyId\") || null); // New state for company ID\n\n  const login = (token, role, companyId) => {\n    console.log(\"Token received in login function:\", token);\n    setAuthToken(token);\n    localStorage.setItem(\"sessionToken\", token);\n\n    // Store the role and company ID in state and local storage\n    setUserRole(role);\n    localStorage.setItem(\"userRole\", role);\n    setLoggedCompanyId(companyId);\n    localStorage.setItem(\"loggedCompanyId\", companyId);\n  };\n  const logout = () => {\n    setAuthToken(null);\n    setUserRole(null); // Clear role on logout\n    setLoggedCompanyId(null); // Clear company ID on logout\n    localStorage.removeItem(\"sessionToken\");\n    localStorage.removeItem(\"userRole\");\n    localStorage.removeItem(\"loggedCompanyId\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authToken,\n      userRole,\n      loggedCompanyId,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"VoglLpHMfUhw/W+jVCO4nJETRrE=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authToken","setAuthToken","localStorage","getItem","userRole","setUserRole","loggedCompanyId","setLoggedCompanyId","login","token","role","companyId","console","log","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jerryvohrer/bespoke-work/front-end-pit/frontend/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [authToken, setAuthToken] = useState(localStorage.getItem(\"sessionToken\") || null);\n  const [userRole, setUserRole] = useState(localStorage.getItem(\"userRole\") || null); // New state for role\n  const [loggedCompanyId, setLoggedCompanyId] = useState(localStorage.getItem(\"loggedCompanyId\") || null); // New state for company ID\n\n  const login = (token, role, companyId) => {\n    console.log(\"Token received in login function:\", token);  \n    setAuthToken(token);\n    localStorage.setItem(\"sessionToken\", token);\n\n    // Store the role and company ID in state and local storage\n    setUserRole(role);\n    localStorage.setItem(\"userRole\", role);\n\n    setLoggedCompanyId(companyId);\n    localStorage.setItem(\"loggedCompanyId\", companyId);\n  };\n\n  const logout = () => {\n    setAuthToken(null);\n    setUserRole(null); // Clear role on logout\n    setLoggedCompanyId(null); // Clear company ID on logout\n    localStorage.removeItem(\"sessionToken\");\n    localStorage.removeItem(\"userRole\");\n    localStorage.removeItem(\"loggedCompanyId\");\n  };\n\n  return (\n    <AuthContext.Provider value={{ authToken, userRole, loggedCompanyId, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAACS,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC;EACxF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACS,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;EACpF,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAACS,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;;EAEzG,MAAMK,KAAK,GAAGA,CAACC,KAAK,EAAEC,IAAI,EAAEC,SAAS,KAAK;IACxCC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEJ,KAAK,CAAC;IACvDR,YAAY,CAACQ,KAAK,CAAC;IACnBP,YAAY,CAACY,OAAO,CAAC,cAAc,EAAEL,KAAK,CAAC;;IAE3C;IACAJ,WAAW,CAACK,IAAI,CAAC;IACjBR,YAAY,CAACY,OAAO,CAAC,UAAU,EAAEJ,IAAI,CAAC;IAEtCH,kBAAkB,CAACI,SAAS,CAAC;IAC7BT,YAAY,CAACY,OAAO,CAAC,iBAAiB,EAAEH,SAAS,CAAC;EACpD,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBd,YAAY,CAAC,IAAI,CAAC;IAClBI,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACnBE,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1BL,YAAY,CAACc,UAAU,CAAC,cAAc,CAAC;IACvCd,YAAY,CAACc,UAAU,CAAC,UAAU,CAAC;IACnCd,YAAY,CAACc,UAAU,CAAC,iBAAiB,CAAC;EAC5C,CAAC;EAED,oBACErB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAElB,SAAS;MAAEI,QAAQ;MAAEE,eAAe;MAAEE,KAAK;MAAEO;IAAO,CAAE;IAAAjB,QAAA,EAClFA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,EAAA,CAhCWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAkCzB,eAAeD,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}