{"ast":null,"code":"import React,{createContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[authToken,setAuthToken]=useState(localStorage.getItem(\"sessionToken\")||null);const[userRole,setUserRole]=useState(localStorage.getItem(\"userRole\")||null);const[companyId,setCompanyId]=useState(localStorage.getItem(\"companyId\")||null);const login=(token,role,loggedCompanyId)=>{console.log(\"Token received in login function:\",token);setAuthToken(token);setUserRole(role);setCompanyId(loggedCompanyId);localStorage.setItem(\"sessionToken\",token);localStorage.setItem(\"userRole\",role);localStorage.setItem(\"companyId\",loggedCompanyId);console.log(role);console.log(loggedCompanyId);};const logout=()=>{setAuthToken(null);setUserRole(null);setCompanyId(null);localStorage.removeItem(\"sessionToken\");localStorage.removeItem(\"userRole\");localStorage.removeItem(\"companyId\");};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{authToken,userRole,companyId,login,logout},children:children});};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","jsx","_jsx","AuthContext","AuthProvider","_ref","children","authToken","setAuthToken","localStorage","getItem","userRole","setUserRole","companyId","setCompanyId","login","token","role","loggedCompanyId","console","log","setItem","logout","removeItem","Provider","value"],"sources":["/Users/jerryvohrer/bespoke-work/front-end-pit/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [authToken, setAuthToken] = useState(localStorage.getItem(\"sessionToken\") || null);\n  const [userRole, setUserRole] = useState(localStorage.getItem(\"userRole\") || null);\n  const [companyId, setCompanyId] = useState(localStorage.getItem(\"companyId\") || null);\n\n  const login = (token, role, loggedCompanyId) => {\n    console.log(\"Token received in login function:\", token);\n    setAuthToken(token);\n    setUserRole(role);\n    setCompanyId(loggedCompanyId);\n\n    localStorage.setItem(\"sessionToken\", token);\n    localStorage.setItem(\"userRole\", role);\n    localStorage.setItem(\"companyId\", loggedCompanyId);\n    console.log(role);\n    console.log(loggedCompanyId);\n\n  };\n\n  const logout = () => {\n    setAuthToken(null);\n    setUserRole(null);\n    setCompanyId(null);\n\n    localStorage.removeItem(\"sessionToken\");\n    localStorage.removeItem(\"userRole\");\n    localStorage.removeItem(\"companyId\");\n  };\n\n  return (\n    <AuthContext.Provider value={{ authToken, userRole, companyId, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvD,KAAM,CAAAC,WAAW,cAAGJ,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAK,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGR,QAAQ,CAACS,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,EAAI,IAAI,CAAC,CACxF,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAACS,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,EAAI,IAAI,CAAC,CAClF,KAAM,CAACG,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAACS,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAI,IAAI,CAAC,CAErF,KAAM,CAAAK,KAAK,CAAGA,CAACC,KAAK,CAAEC,IAAI,CAAEC,eAAe,GAAK,CAC9CC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAEJ,KAAK,CAAC,CACvDR,YAAY,CAACQ,KAAK,CAAC,CACnBJ,WAAW,CAACK,IAAI,CAAC,CACjBH,YAAY,CAACI,eAAe,CAAC,CAE7BT,YAAY,CAACY,OAAO,CAAC,cAAc,CAAEL,KAAK,CAAC,CAC3CP,YAAY,CAACY,OAAO,CAAC,UAAU,CAAEJ,IAAI,CAAC,CACtCR,YAAY,CAACY,OAAO,CAAC,WAAW,CAAEH,eAAe,CAAC,CAClDC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CACjBE,OAAO,CAACC,GAAG,CAACF,eAAe,CAAC,CAE9B,CAAC,CAED,KAAM,CAAAI,MAAM,CAAGA,CAAA,GAAM,CACnBd,YAAY,CAAC,IAAI,CAAC,CAClBI,WAAW,CAAC,IAAI,CAAC,CACjBE,YAAY,CAAC,IAAI,CAAC,CAElBL,YAAY,CAACc,UAAU,CAAC,cAAc,CAAC,CACvCd,YAAY,CAACc,UAAU,CAAC,UAAU,CAAC,CACnCd,YAAY,CAACc,UAAU,CAAC,WAAW,CAAC,CACtC,CAAC,CAED,mBACErB,IAAA,CAACC,WAAW,CAACqB,QAAQ,EAACC,KAAK,CAAE,CAAElB,SAAS,CAAEI,QAAQ,CAAEE,SAAS,CAAEE,KAAK,CAAEO,MAAO,CAAE,CAAAhB,QAAA,CAC5EA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}