{"ast":null,"code":"var _jsxFileName = \"/Users/jerryvohrer/bespoke-work/front-end-pit/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\nimport { CompanyContext } from '../context/CompanyContext'; // Import CompanyContext\nimport AuthContext from '../context/AuthContext'; // Import AuthContext\nimport ClientBox from './ClientBox'; // Import ClientBox component\nimport './Dashboard.css'; // Import Dashboard.css for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    COMPANY_MAPPING,\n    allCalls\n  } = useContext(CompanyContext); // Access data from CompanyContext\n  const {\n    userRole,\n    companyId\n  } = useContext(AuthContext); // Access userRole and companyId from AuthContext\n  const [clientCallCounts, setClientCallCounts] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const navigate = useNavigate(); // For navigation\n\n  useEffect(() => {\n    // If the user is a client, redirect to their specific client detail page\n    if (userRole === 'client') {\n      navigate(`/client/${companyId}`);\n      return; // Stop execution if redirecting\n    }\n    if (userRole === 'admin' && COMPANY_MAPPING) {\n      // Use context data to compute call counts\n      const thirtyDaysAgo = new Date();\n      thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n      const callCounts = Object.keys(COMPANY_MAPPING).reduce((acc, companyId) => {\n        const callsForCompany = allCalls[companyId] || [];\n        const recentCallsCount = callsForCompany.filter(call => new Date(call.start_time) >= thirtyDaysAgo).length;\n        acc[companyId] = recentCallsCount;\n        return acc;\n      }, {});\n      const sortedClientCallCounts = Object.keys(COMPANY_MAPPING).map(companyId => ({\n        companyId,\n        companyName: COMPANY_MAPPING[companyId],\n        callCount: callCounts[companyId] || 0\n      })).sort((a, b) => b.callCount - a.callCount);\n      setClientCallCounts(sortedClientCallCounts);\n    }\n  }, [userRole, companyId, COMPANY_MAPPING, allCalls, navigate]);\n  const handleShowMore = () => {\n    setShowMore(!showMore);\n  };\n  if (userRole !== 'admin') return null; // Prevent rendering if the user is not an admin\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Client Performance Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"client-boxes\",\n      children: clientCallCounts.slice(0, showMore ? clientCallCounts.length : 8).map(client => /*#__PURE__*/_jsxDEV(ClientBox, {\n        companyId: client.companyId,\n        companyName: client.companyName,\n        totalCalls: client.callCount\n      }, client.companyId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), clientCallCounts.length > 8 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"show-more-button\",\n      onClick: handleShowMore,\n      children: showMore ? 'Show Less' : 'Show More'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"xX4gwUaqU466C/3XSpGikUCyYas=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useContext","useState","useEffect","useNavigate","CompanyContext","AuthContext","ClientBox","jsxDEV","_jsxDEV","Dashboard","_s","COMPANY_MAPPING","allCalls","userRole","companyId","clientCallCounts","setClientCallCounts","showMore","setShowMore","navigate","thirtyDaysAgo","Date","setDate","getDate","callCounts","Object","keys","reduce","acc","callsForCompany","recentCallsCount","filter","call","start_time","length","sortedClientCallCounts","map","companyName","callCount","sort","a","b","handleShowMore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","client","totalCalls","onClick","_c","$RefreshReg$"],"sources":["/Users/jerryvohrer/bespoke-work/front-end-pit/src/components/Dashboard.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\nimport { CompanyContext } from '../context/CompanyContext'; // Import CompanyContext\nimport AuthContext from '../context/AuthContext'; // Import AuthContext\nimport ClientBox from './ClientBox'; // Import ClientBox component\nimport './Dashboard.css'; // Import Dashboard.css for styling\n\n\nconst Dashboard = () => {\n  const { COMPANY_MAPPING, allCalls } = useContext(CompanyContext); // Access data from CompanyContext\n  const { userRole, companyId } = useContext(AuthContext); // Access userRole and companyId from AuthContext\n  const [clientCallCounts, setClientCallCounts] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const navigate = useNavigate(); // For navigation\n\n  useEffect(() => {\n    // If the user is a client, redirect to their specific client detail page\n    if (userRole === 'client') {\n      navigate(`/client/${companyId}`);\n      return; // Stop execution if redirecting\n    }\n\n    if (userRole === 'admin' && COMPANY_MAPPING) {\n      // Use context data to compute call counts\n      const thirtyDaysAgo = new Date();\n      thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n\n      const callCounts = Object.keys(COMPANY_MAPPING).reduce((acc, companyId) => {\n        const callsForCompany = allCalls[companyId] || [];\n        const recentCallsCount = callsForCompany.filter(call => new Date(call.start_time) >= thirtyDaysAgo).length;\n        acc[companyId] = recentCallsCount;\n        return acc;\n      }, {});\n\n      const sortedClientCallCounts = Object.keys(COMPANY_MAPPING).map(companyId => ({\n        companyId,\n        companyName: COMPANY_MAPPING[companyId],\n        callCount: callCounts[companyId] || 0\n      })).sort((a, b) => b.callCount - a.callCount);\n\n      setClientCallCounts(sortedClientCallCounts);\n    }\n  }, [userRole, companyId, COMPANY_MAPPING, allCalls, navigate]);\n\n  const handleShowMore = () => {\n    setShowMore(!showMore);\n  };\n\n  if (userRole !== 'admin') return null; // Prevent rendering if the user is not an admin\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Client Performance Overview</h1>\n      <div className=\"client-boxes\">\n        {clientCallCounts\n          .slice(0, showMore ? clientCallCounts.length : 8)\n          .map(client => (\n            <ClientBox key={client.companyId} companyId={client.companyId} companyName={client.companyName} totalCalls={client.callCount} />\n          ))}\n      </div>\n      {clientCallCounts.length > 8 && (\n        <button className=\"show-more-button\" onClick={handleShowMore}>\n          {showMore ? 'Show Less' : 'Show More'}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}